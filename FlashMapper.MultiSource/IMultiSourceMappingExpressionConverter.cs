//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Linq.Expressions;

namespace FlashMapper.MultiSource
{
    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13, TSource14, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13, TSource14>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13, TSource14, TDestination>> mappingExpression);
    }

    public interface IMultiSourceMappingExpressionConverter<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13, TSource14, TSource15, TDestination>
    {
        Expression<Func<FlashMapperMultiSourceWrap<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13, TSource14, TSource15>, TDestination>> Convert(Expression<Func<TSource1, TSource2, TSource3, TSource4, TSource5, TSource6, TSource7, TSource8, TSource9, TSource10, TSource11, TSource12, TSource13, TSource14, TSource15, TDestination>> mappingExpression);
    }

}